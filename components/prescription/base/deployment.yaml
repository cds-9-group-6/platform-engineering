apiVersion: apps/v1
kind: Deployment
metadata:
  name: prescription
  labels:
    app: prescription
    app.kubernetes.io/component: prescription
    app.kubernetes.io/instance: prescription
    app.kubernetes.io/name: prescription
    app.kubernetes.io/part-of: sasya-arogya
    app.openshift.io/runtime: python
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prescription
  template:
    metadata:
      labels:
        app: prescription
        app.kubernetes.io/component: prescription
        app.kubernetes.io/name: prescription
        deployment: prescription
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: prescription
          image: quay.io/rajivranjan/prescription:amd64-v1.3
          securityContext:
            runAsUser: 0
          ports:
            - containerPort: 8081
              protocol: TCP
          env:
            - name: CHROMA_HOST
              value: chromadb.sasya-arogya.svc.cluster.local
            - name: CHROMA_PORT
              value: "8000"
            - name: EMBEDDING_MODEL
              value: intfloat/multilingual-e5-large-instruct
            - name: OLLAMA_HOST
              value: http://ollama.sasya-arogya.svc.cluster.local:11434
            - name: OLLAMA_MODEL
              value: llama3.1:8b
            - name: OLLAMA_BASE_URL
              value: http://ollama.sasya-arogya.svc.cluster.local:11434/v1
            - name: MLFLOW_TRACKING_URI
              value: http://mlflow-server.sasya-arogya.svc.cluster.local:5001
            - name: MLFLOW_EXPERIMENT_NAME
              value: llm_tracing_ollama
            - name: MLFLOW_ARTIFACT_LOCATION
              value: ./mlflow_artifacts
            - name: MLFLOW_REGISTRY_URI
              value: http://mlflow-server.sasya-arogya.svc.cluster.local:5001
            - name: MLFLOW_ACTIVE_MODEL_NAME
              value: llama318b_model
            # OpenTelemetry Configuration
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otel-collector.sasya-arogya.svc.cluster.local:4318/v1/traces"
            - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
              value: "http/protobuf"
            - name: OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
              value: "http://otel-collector.sasya-arogya.svc.cluster.local:4318/v1/metrics"
            - name: OTEL_EXPORTER_OTLP_METRICS_PROTOCOL
              value: "http/protobuf"
            - name: OTEL_METRIC_EXPORT_INTERVAL
              value: "10000"
            - name: OTEL_SERVICE_NAME
              value: "sasyaarogya"
            - name: MLFLOW_TRACE_ENABLE_OTLP_DUAL_EXPORT
              value: "false"
            # MLflow Async Trace Logging Configuration
            - name: MLFLOW_ENABLE_ASYNC_TRACE_LOGGING
              value: "true"
            - name: MLFLOW_ASYNC_TRACE_LOGGING_MAX_WORKERS
              value: "10"
            - name: MLFLOW_ASYNC_TRACE_LOGGING_MAX_QUEUE_SIZE
              value: "1000"
            - name: MLFLOW_TRACE_SAMPLING_RATIO
              value: "1.0"
            # Judge Model Configuration
            - name: OPENAI_MODEL
              value: "gpt-4"
            - name: TEACHER_MODEL_TEMPERATURE
              value: "0.6"
            - name: TEACHER_MODEL_TOKEN_OUTPUT
              value: "1500"
            # # Application Configuration
            # - name: LOG_LEVEL
            #   value: "INFO"
            # - name: DEBUG
            #   value: "false"
            # - name: API_PORT
            #   value: "8081"
            # - name: API_RELOAD
            #   value: "false"
            # OpenAI API Key (from secret)
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: prescription-secrets
                  key: openai-api-key
          resources: {}
          # resources:
          #   requests:
          #     memory: "4Gi"
          #     cpu: "1"
          #   limits:
          #     memory: "8Gi"
          #     cpu: "4"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 360
            periodSeconds: 60
            timeoutSeconds: 15
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 15
            failureThreshold: 10
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
